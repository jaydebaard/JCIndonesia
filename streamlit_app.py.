# Initialize session state
st.session_state.setdefault("last_generated_code", "")

# Display the title and image
st.title("SFDC Opportunity Name Generator")
st.image("/Users/antonsanjaya/Downloads/johnson-controls.jpg", width=200)

# Input fields with help text
lob = st.text_input(
    "Enter LoB (Airside/Chiller/Control/Fire/Security/Digital Solution):",
    help="Example: Airside, Chiller, Digital Solution, etc."
).strip().lower()
owner = st.text_input(
    "Enter End Customer Name Abbreviation (e.g., PTBS, BBRI, etc.):",
    help="Use abbreviations for customer names."
).strip()
building = st.text_input(
    "Enter Building Type (e.g., Office, Mall, Data Center, etc.):",
    help="Example: Office, Mall, Data Center, etc."
).strip().lower()
area = st.text_input("Enter Project Area (e.g., Cimanggis):", help="Provide the area name.").strip()

# Generate Opportunity Name
if st.button("Generate Opportunity Name"):
    if not lob or not owner or not building or not area:
        st.error("All fields are required. Please fill them in.")
    else:
        lob_code = LOB_CODES.get(lob, "Unknown LoB")
        facility_code = FACILITY_CODES.get(building, "Unknown Facility")

        reversed_owner = reverse_string(owner)
        reversed_facility = reverse_string(facility_code)
        reversed_area = reverse_string(area[:4].upper())

        if "Unknown" in (lob_code, facility_code):
            st.error("Invalid input. Please check your entries.")
        else:
            opportunity_name = f"#{lob_code}#{reversed_owner}-{reversed_facility}#{reversed_area}"
            st.success("Generated Opportunity Name:")
            st.code(opportunity_name)
            st.session_state["last_generated_code"] = opportunity_name
